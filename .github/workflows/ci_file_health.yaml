name: CI - File health

# Triggers the workflow on pull request and push events for the `main` branch only
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.head_ref != '' }}

jobs:
  ci:
    name: Check
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "*"

      # Step 3: Install and run Pre-commit hooks for file checks
      - name: Run Pre-commit Hooks
        uses: pre-commit/action@v3.0.1
        with:
          # Pre-commit configuration path
          extra_args: --all-files

      # Step 4: Install and check documentation with Pandoc
      - name: Setup and Check Documentation
        env:
          pandoc_path: "${{ github.workspace }}/../pandoc"
        run: |
          # Download and install Pandoc
          curl -L -o "${{ runner.temp }}/pandoc.tar.gz" \
          "https://github.com/jgm/pandoc/releases/download/3.1.7/pandoc-3.1.7-linux-amd64.tar.gz"
          tar -xf "${{ runner.temp }}/pandoc.tar.gz" -C "${{ github.workspace }}/.."
          mv "${{ github.workspace }}/.."/pandoc-* "${{ env.pandoc_path }}"
          
          # Run Pandoc to generate manual pages for different languages
          for lang in doc/*/; do
            "${{ env.pandoc_path }}/bin/pandoc" -f markdown -t man -s "$lang/qbittorrent.1.md" -o "$lang/qbittorrent.1"
            "${{ env.pandoc_path }}/bin/pandoc" -f markdown -t man -s "$lang/qbittorrent-nox.1.md" -o "$lang/qbittorrent-nox.1"
          done

          # Check for any documentation differences
          git diff -I '\.\\".*' --exit-code

      # Step 5: Additional optional health check (if applicable)
      # Uncomment this block if you have a Coverity scan setup or other file health tools
      # - name: Run Coverity Scan
      #   uses: coverity/scan@v1
      #   with:
      #     scan-options: --security
      #   env:
      #     COVERITY_TOKEN: ${{ secrets.COVERITY_TOKEN }}
